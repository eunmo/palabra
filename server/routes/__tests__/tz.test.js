const { trimDate, getDateDiff } = require('../tz');

test.each([
  [660, new Date('2020-08-03T00:00:00.000Z')],
  [600, new Date('2020-08-03T00:00:00.000Z')],
  [540, new Date('2020-08-03T00:00:00.000Z')],
  [480, new Date('2020-08-03T00:00:00.000Z')],
  [420, new Date('2020-08-03T00:00:00.000Z')],
  [360, new Date('2020-08-03T00:00:00.000Z')],
  [300, new Date('2020-08-03T00:00:00.000Z')],
  [240, new Date('2020-08-03T00:00:00.000Z')],
  [180, new Date('2020-08-03T00:00:00.000Z')],
  [120, new Date('2020-08-03T00:00:00.000Z')],
  [60, new Date('2020-08-03T00:00:00.000Z')],
  [0, new Date('2020-08-03T00:00:00.000Z')],
  [-60, new Date('2020-08-03T00:00:00.000Z')],
  [-120, new Date('2020-08-03T00:00:00.000Z')],
  [-180, new Date('2020-08-03T00:00:00.000Z')],
  [-240, new Date('2020-08-03T00:00:00.000Z')],
  [-300, new Date('2020-08-04T00:00:00.000Z')],
  [-360, new Date('2020-08-04T00:00:00.000Z')],
  [-420, new Date('2020-08-04T00:00:00.000Z')],
  [-480, new Date('2020-08-04T00:00:00.000Z')],
  [-540, new Date('2020-08-04T00:00:00.000Z')],
  [-600, new Date('2020-08-04T00:00:00.000Z')],
  [-660, new Date('2020-08-04T00:00:00.000Z')],
])('trim tz %d', (timezone, expected) => {
  const trimmed = trimDate('2020-08-04T00:00:00.000Z', timezone);
  expect(trimmed).toStrictEqual(expected);
});

test.each([
  [0, '2020-08-04T00:00:00.000Z', new Date('2020-08-03T00:00:00.000Z')],
  [0, '2020-08-04T01:00:00.000Z', new Date('2020-08-03T00:00:00.000Z')],
  [0, '2020-08-04T02:00:00.000Z', new Date('2020-08-03T00:00:00.000Z')],
  [0, '2020-08-04T03:00:00.000Z', new Date('2020-08-03T00:00:00.000Z')],
  [0, '2020-08-04T04:00:00.000Z', new Date('2020-08-03T00:00:00.000Z')],
  [0, '2020-08-04T05:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T06:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T07:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T08:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T09:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T10:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T11:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T12:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T13:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T14:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T15:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T16:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T17:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T18:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T19:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T20:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T21:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T22:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [0, '2020-08-04T23:00:00.000Z', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T00:00:00.000+09:00', new Date('2020-08-03T00:00:00.000Z')],
  [-540, '2020-08-04T01:00:00.000+09:00', new Date('2020-08-03T00:00:00.000Z')],
  [-540, '2020-08-04T02:00:00.000+09:00', new Date('2020-08-03T00:00:00.000Z')],
  [-540, '2020-08-04T03:00:00.000+09:00', new Date('2020-08-03T00:00:00.000Z')],
  [-540, '2020-08-04T04:00:00.000+09:00', new Date('2020-08-03T00:00:00.000Z')],
  [-540, '2020-08-04T05:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T06:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T07:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T08:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T09:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T10:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T11:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T12:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T13:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T14:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T15:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T16:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T17:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T18:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T19:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T20:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T21:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T22:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
  [-540, '2020-08-04T23:00:00.000+09:00', new Date('2020-08-04T00:00:00.000Z')],
])('trim tz %d %s', (timezone, date, expected) => {
  const trimmed = trimDate(date, timezone);
  expect(trimmed).toStrictEqual(expected);
});

test.each([
  [0, '2020-08-01T00:00:00.000Z', '2020-08-04T12:00:00.000Z', 4],
  [0, '2020-08-01T01:00:00.000Z', '2020-08-04T12:00:00.000Z', 4],
  [0, '2020-08-01T02:00:00.000Z', '2020-08-04T12:00:00.000Z', 4],
  [0, '2020-08-01T03:00:00.000Z', '2020-08-04T12:00:00.000Z', 4],
  [0, '2020-08-01T04:00:00.000Z', '2020-08-04T12:00:00.000Z', 4],
  [0, '2020-08-01T05:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T06:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T07:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T08:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T09:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T10:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T11:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T12:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T13:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T14:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T15:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T16:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T17:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T18:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T19:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T20:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T21:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T22:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [0, '2020-08-01T23:00:00.000Z', '2020-08-04T12:00:00.000Z', 3],
  [-540, '2020-08-01T00:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 4],
  [-540, '2020-08-01T01:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 4],
  [-540, '2020-08-01T02:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 4],
  [-540, '2020-08-01T03:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 4],
  [-540, '2020-08-01T04:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 4],
  [-540, '2020-08-01T05:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T06:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T07:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T08:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T09:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T10:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T11:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T12:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T13:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T14:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T15:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T16:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T17:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T18:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T19:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T20:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T21:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T22:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
  [-540, '2020-08-01T23:00:00.000+09:00', '2020-08-04T12:00:00.000+09:00', 3],
])('get date diff %d %s', (timezone, date, ref, expected) => {
  const refDate = trimDate(ref, timezone);
  const diff = getDateDiff(date, timezone, refDate);
  expect(diff).toBe(expected);
});
